<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = .1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Game Point
draw_set_halign(fa_center);
draw_text(300,610,"Game Mode Set"+ string(global.gameModeText));
draw_text(300,650,"Dodge the falling icicles!");
if(global.gameMode = 0){
    draw_text(300,690,"HighScore " + string(global.highScore));
} else if(global.gameMode = 1){
    draw_text(300,690,"HighScore " + string(global.mostRowsPassed/9));
}

if(global.newHighScore = true){
    draw_sprite(spr_New_HS,-1,175,680);
}


//draw_set_font(fnt_normal);
draw_set_halign(fa_left);
draw_text(10,10,"v0.0.5.2 Build 2");
draw_set_halign(fa_left);
draw_sprite(spr_Cube_Coins,-1,25,70);
draw_text(45,48,":" + string(global.cubeCoins));


if(global.currentPlayerSprite == 0){
    draw_sprite(global.shopSprite[0],-1,550,48);
} else if(global.currentPlayerSprite == 1) {
    draw_sprite(global.shopSprite[1],-1,550,48);
} else if(global.currentPlayerSprite == 2) {
    draw_sprite(global.shopSprite[2],-1,550,48);
} else if(global.currentPlayerSprite == 3) {
    draw_sprite(global.shopSprite[3],-1,550,48);
} else if(global.currentPlayerSprite == 4) {
    draw_sprite(global.shopSprite[4],-1,550,48);
} else if(global.currentPlayerSprite == 5) {
    draw_sprite(global.shopSprite[5],-1,550,48);
} else if(global.currentPlayerSprite == 6) {
    draw_sprite(global.shopSprite[6],-1,550,48);
} else if(global.currentPlayerSprite == 7) {
    draw_sprite(global.shopSprite[7],-1,550,48);
} else if(global.currentPlayerSprite == 8) {
    draw_sprite(global.shopSprite[8],-1,550,48);
} else if(global.currentPlayerSprite == 9) {
    draw_sprite(global.shopSprite[9],-1,550,48);
}else if(global.currentPlayerSprite == 10) {
    draw_sprite(global.shopSprite[10],-1,550,48);
} else if(global.currentPlayerSprite == 11) {
    draw_sprite(global.shopSprite[11],-1,550,48);
} else if(global.currentPlayerSprite == 12) {
    draw_sprite(global.shopSprite[12],-1,550,48);
} else if(global.currentPlayerSprite == 13) {
   draw_sprite(global.shopSprite[13],-1,550,48);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
